name: Create Release

on:
  push:
    branches: [ main ]

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  COMMIT_TEXT: "${{ github.event.head_commit.message }}"
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
    
      - name: Get version
        id: get-version
        run: python ./actions/get_version.py

      - name: Set Tag Output
        id: set-tag
        run:  echo "::set-output name=tag_name::$(python ./actions/get_version.py)"

      - uses: mukunku/tag-exists-action@v1.2.0
        id: checkTag
        with: 
          tag: ${{ steps.set-tag.outputs.tag_name }}

      - name: Create Tag
        if: ${{ steps.checkTag.outputs.exists == 'false' }}
        uses: actions/github-script@v3
        env:
          TAG: ${{ steps.set-tag.outputs.tag_name }}
        with:
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
             ref: "refs/tags/${{ steps.set-tag.outputs.tag_name }}",
              sha: context.sha
            })


      - name: Update version in files
        run: python ./actions/update_version.py
        env:
          VERSION: ${{ steps.set-tag.outputs.tag_name }}
      
      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          author_name: github-actions
          author_email: github-actions@github.com
          github_token: ${{ secrets.PAT_TOKEN }}
          message: "Update version to ${{ steps.set-tag.outputs.tag_name }}"

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build & Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./docker
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/gpt-bot:${{ steps.set-tag.outputs.tag_name }}

      - name: Create Release notes file
        run: python ./actions/create_release_notes.py

      - name: Create Release on GitHub
        uses: ncipollo/release-action@v1.12.0
        with:
          tag: ${{ steps.set-tag.outputs.tag_name }}
          bodyFile: './release_notes.txt'
          token: ${{ secrets.PAT_TOKEN }}