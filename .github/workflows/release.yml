name: Create Release

on:
  push:
    branches: [ main ]

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  COMMIT_TEXT: "${{ github.event.head_commit.message }}"
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: gradle

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build with Gradle
        run: ./gradlew build -x test

  create-release:
    needs: build
    if: ${{ (github.actor != 'github-actions') && (contains(github.event.head_commit.message, 'release')) }}
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
    
      - name: Get version
        id: get-version
        run: python ./actions/get_version.py

      - name: Set Tag Output
        id: set-tag
        run: |
          echo "version=$(python ./actions/get_version.py)" >> $GITHUB_OUTPUT
          echo "tag_name=v$(python ./actions/get_version.py)" >> $GITHUB_OUTPUT
      
     
      - name: output 
        run: |
          echo "version: ${{ steps.set-tag.outputs.version }}"
          echo "tag_name: ${{ steps.set-tag.outputs.tag_name }}" 

      - name: Check if tag exists
        uses: mukunku/tag-exists-action@v1.2.0
        id: checkTag
        with: 
          tag: ${{ steps.set-tag.outputs.tag_name }}

      - name: Update version in files
        run: python ./actions/update_version.py
        env:
          VERSION: ${{ steps.set-tag.outputs.version }}
      
      - name: Commit & Push changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add .
          git commit -m "Update version to ${{ steps.set-tag.outputs.version }}"
          git tag -a ${{ steps.set-tag.outputs.tag_name }} -m "Release ${{ steps.set-tag.outputs.tag_name }}"
          git push origin ${{ steps.set-tag.outputs.tag_name }}

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build & Push Docker image
        id: docker
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./docker/Dockerfile
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/gpt-bot:${{ steps.set-tag.outputs.version }},${{ env.DOCKER_USERNAME }}/gpt-bot:latest

      - name: Create Release notes file
        run: python ./actions/create_release_notes.py
        env:
          VERSION: ${{ steps.set-tag.outputs.version }}
          IMAGE_SHA: ${{ steps.docker.outputs.digest }}
        
      - name: Create Release on GitHub
        uses: ncipollo/release-action@v1.12.0
        with:
          tag: ${{ steps.set-tag.outputs.tag_name }}
          bodyFile: './release_notes.txt'
          token: ${{ secrets.PAT_TOKEN }}